name: Release

on:
  push:
    tags:
      - v[0-9]+.*
    branches: [ develop, main ]
jobs:
  build-and-artifact:
    
    name: ${{ matrix.os }} (${{ matrix.configuration }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        configuration: [ debug, release ]
        os: [ ubuntu-latest  ]
        arch: [x64]
        BUILD_SHARED_LIBS: [OFF]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set output dir
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=$([[ ${{matrix.BUILD_SHARED_LIBS}} == OFF ]] && echo ${{ github.workspace }}/build/static || echo ${{ github.workspace }}/build/shared)" >> $GITHUB_OUTPUT

      - name: Configure CMake
        run : |
          cmake -B ${{ steps.strings.outputs.build-output-dir }} -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -DBUILD_SHARED_LIBS=${{ matrix.BUILD_SHARED_LIBS }}

      - name: Build
        run : |
          cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.configuration }}

      - name: Package
        run : |
          mkdir ${{ github.workspace }}/${{ matrix.configuration }}
          mkdir ${{ github.workspace }}/${{ matrix.configuration }}/include
          mv ${{ steps.strings.outputs.build-output-dir }}/src/libok-gloox.* ${{ github.workspace }}/${{ matrix.configuration }}
          cp ${{ github.workspace }}/src/*.h ${{ github.workspace }}/${{ matrix.configuration }}/include

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: libgloox-linux-${{ matrix.arch }}-${{ matrix.configuration }}
          path: |
            ${{ github.workspace }}/${{ matrix.configuration }}/include
            ${{ github.workspace }}/${{ matrix.configuration }}/libok-gloox.*

  release:
    needs: build-and-artifact
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.event.ref_name }}
    strategy:
      matrix:
        arch: [ x64 ]
        configuration: [ debug, release ]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3

      - name: Tar
        working-directory: libgloox-linux-${{ matrix.arch }}-${{ matrix.configuration }}
        run : tar -czvf libgloox-linux-${{ matrix.arch }}-${{ matrix.configuration }}.tar.gz libok-gloox.* include

      - name: Set TAG to 'latest' if no tag is found
        shell: bash
        run: |
          if [[ "$IMAGE_TAG" != v* ]]; then
            echo "Setting IMAGE_TAG to latest"
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Upload
        uses: softprops/action-gh-release@v1
        if: ${{env.IMAGE_TAG != ''}}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            libgloox-linux-${{ matrix.arch }}-${{ matrix.configuration }}-${{env.IMAGE_TAG}}.tar.gz
