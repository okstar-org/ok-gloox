name: Release

on:
  push:
    tags:
      - v[0-9]+.*
    branches: [ develop, main ]
jobs:
  build-and-artifact:
    
    name: ${{ matrix.os }} (${{ matrix.configuration }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        configuration: [ debug, release ]
        os: [ ubuntu-latest  ]
        arch: [x64]
        BUILD_SHARED_LIBS: [OFF]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set output dir
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=$([[ ${{matrix.BUILD_SHARED_LIBS}} == OFF ]] && echo ${{ github.workspace }}/build/static || echo ${{ github.workspace }}/build/shared)" >> $GITHUB_OUTPUT

      - name: Configure CMake
        run : |
          cmake -B ${{ steps.strings.outputs.build-output-dir }} -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -DBUILD_SHARED_LIBS=${{ matrix.BUILD_SHARED_LIBS }}

      - name: Build
        run : |
          cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.configuration }}

      - name: Package
        run : |
          mkdir ${{ github.workspace }}/${{ matrix.configuration }}
          mkdir ${{ github.workspace }}/${{ matrix.configuration }}/include
          mv ${{ steps.strings.outputs.build-output-dir }}/src/libok-gloox.* ${{ github.workspace }}/${{ matrix.configuration }}
          cp ${{ github.workspace }}/src/*.h ${{ github.workspace }}/${{ matrix.configuration }}/include

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: libgloox-linux-${{ matrix.arch }}-${{ matrix.configuration }}
          path: |
            ${{ github.workspace }}/${{ matrix.configuration }}/include
            ${{ github.workspace }}/${{ matrix.configuration }}/libok-gloox.*

  release:
    needs: build-and-artifact
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ x64 ]
        configuration: [ debug, release ]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3

      - name: Tar
        working-directory: libgloox-linux-${{ matrix.arch }}-${{ matrix.configuration }}
        run : tar -czvf libgloox-linux-${{ matrix.arch }}-${{ matrix.configuration }}.tar.gz libok-gloox.* include
          
      - name: Get Tag
        id  : get_tag
        run : echo "tag=${GITHUB_REF#refs/}" >> "$GITHUB_OUTPUT"
        
      - name: Get Repo
        id  : get_repo
        run : echo "repo=${GITHUB_REPOSITORY}" >> "$GITHUB_OUTPUT"
          
      - name: Get Upload URL
        id  : get_upload_url
        run : |
          echo "upload_url=`curl -L -s \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ steps.get_repo.outputs.repo }}/releases/${{ steps.get_tag.outputs.tag }} | jq -r '.upload_url'`" >> "$GITHUB_OUTPUT"
        env :
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload
        uses: actions/upload-release-asset@v1
        env :
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/gzip
          asset_name: libgloox-linux-${{ matrix.arch }}-${{ matrix.configuration }}.tar.gz
          asset_path: libgloox-linux-${{ matrix.arch }}-${{ matrix.configuration }}/libgloox-linux-${{ matrix.arch }}-${{ matrix.configuration }}.tar.gz
          upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
